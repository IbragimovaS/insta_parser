import time
import requests
import instaloader
import datetime
import ibm_db_dbi as db

headers = {
    'Host': 'www.instagram.com',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate, br',
    'Proxy-Authorization': 'Basic YWNjZXNzX3Rva2VuOjFhMGRsaGhsOGpscmsydm9xMTE5OThsaGczcXVuZmY1a3A5cGpvNXRpdWM1bXNvN2UzN2g=',
    'Connection': 'keep-alive',
    'Cookie': 'mid=XNVcpAALAAFxMTvgNsJbBCdFa89U; shbid=7017; shbts=1558613360.8308508; datr=KGXVXIUh_zazlJ_o-ZB9Nh4Q; rur=PRN; urlgen="{\"95.59.139.133\": 9198}:1hTmXA:97dsHBPwD1XcMLcUL0sbeOU_miU"; csrftoken=lA9XhctCIP1m7Zmy8Dbc2gtmfJv027qi; ds_user_id=13138309171; sessionid=13138309171%3ABudcvVrQbAsOph%3A27',
    'Upgrade-Insecure-Requests': '1',
    'Cache-Control': 'max-age=0',
    'TE': 'Trailers'
}

L = instaloader.Instaloader()

def get_id_for_blog(url, headers, session=None):
    session = session or requests.Session()

    r = session.get(url, headers=headers)
    r_code = r.status_code
    #print(r)
    #print(r_code)
    if r_code == requests.codes.ok:
        # the code is 200 or valid
        return r.json()
    else:
        return None

def get_blog_data(data):
    if data is not None:
        time.sleep(0.7)
        inner_data = data.get('graphql', None)
        inner_data = inner_data.get('user', None)

        biography = inner_data['biography']
        number_of_followers = inner_data['edge_followed_by']['count']
        number_of_following = inner_data['edge_follow']['count']
        full_name = inner_data['full_name']
        channel_id = inner_data['id']
        channel_name = inner_data['username']
        posts_count = inner_data['edge_owner_to_timeline_media']['count']
        inserted_date = datetime.datetime.now()
        general_info = {
            'biography': biography,
            'number_of_followers': number_of_followers,
            'number_of_following': number_of_following,
            'full_name': full_name,
            'channel_id': channel_id,
            'channel_name': channel_name,
            'posts_count': posts_count
        }
        return general_info

        #print(general_info['channel_name']

# Login or load session
username = "+380967967135"
password ="r2d2C3po"
L.login(username, password)        # (login)

# Obtain profile metadata
channel_id = '439874749'
profile = instaloader.Profile.from_id(L.context, channel_id)

# Print list of followees
connection_text = "DATABASE=PRODDB;HOSTNAME=192.168.252.11;PORT=50000;PROTOCOL=TCPIP;UID=db2inst1;PWD=Qjuehnghj1;"
con = db.connect(connection_text, "", "")
cursor = con.cursor()

for followee in profile.get_followers():
    username = followee.username
    user_id = followee.userid
    url = "https://www.instagram.com/"+username

    cursor.execute('select id from INSTA_CHANNEL_DATA where channel_id = \'{channel_id}\' and user_id=\'{user_id}\''.format(channel_id=channel_id, user_id=user_id))
    one_row = cursor.fetchone()
    print(username, '- ', user_id, '- ', url)
    try:
        if one_row is None:
            data_blog = get_id_for_blog(url='https://www.instagram.com/' + username + '/?__a=1', headers=headers)
            followers_data = get_blog_data(data_blog)
            #print(followers_data)
            user_id = followee.userid
            user_name = followers_data['channel_name']
            user_scr_name = followers_data['full_name']
            user_url = url
            followed_by = followers_data['number_of_followers']
            followed_to = followers_data['number_of_following']

            print('Insert into', channel_id, ' - ', user_id, 'object.')
            sql = "insert into insta_channel_data(channel_id, user_id, user_name) values (?,?,?)"
            cursor.execute(sql, (channel_id, user_id, user_name))

    except:
        print(user_id, '______', user_name)
    cursor.execute('select id from insta_followers_data where user_id = \'{user_id}\''.format(user_id=user_id))
    one_row1 = cursor.fetchone()
    if one_row1 is None:

        try:
            data_blog = get_id_for_blog(url='https://www.instagram.com/' + username + '/?__a=1', headers=headers)
            followers_data = get_blog_data(data_blog)
           # print(followers_data)
            user_id = followee.userid
            user_name = followers_data['channel_name']
            user_scr_name = followers_data['full_name']
            user_url = url
            followed_by = followers_data['number_of_followers']
            followed_to = followers_data['number_of_following']

            print('Insert ', user_id, 'object into followers_data')
            sql1 = "insert into insta_followers_data (user_id, user_name, user_scr_name, user_url, followed_by, followed_to) values (?,?,?,?,?,?)"
            cursor.execute(sql1,
                           (user_id, user_name, user_scr_name, user_url, followed_by, followed_to))
        except:
            print(user_id, '______', user_name)
    con.commit()


# (likewise with profile.get_followers())

# for profile in follow_list:

cursor.close()
con.close()



